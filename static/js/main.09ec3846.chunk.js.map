{"version":3,"sources":["components/header/Header.jsx","components/start-form/StartForm.jsx","components/stats/Stats.jsx","components/end-game-window/EndGameWindow.jsx","components/field/Field.jsx","components/cell/Cell.jsx","components/ships-select-area/ShipsSelectArea.jsx","components/selected-ship/SelectedShip.jsx","pages/Home.jsx","pages/game/Player.js","pages/game/Game.jsx","pages/EndGame.jsx","App.js","index.js"],"names":["Header","className","StartForm","setGameProps","defaultName","React","useState","name","setName","side","setSide","changeSide","e","newSide","target","value","onChange","newName","onClick","onBlur","type","checked","to","Stats","stats","setStats","useEffect","JSON","parse","localStorage","getItem","map","winCount","loseCount","EndGameWindow","winnerName","removePlayersNames","Field","id","isPlayerField","selectedShip","sendRotate","removeSelectedShip","endDeployState","shipsLengths","isDeployState","isCurMove","changeMove","endGame","cells","setCells","ships","setShips","curSelectedShip","setCurSelectedShip","preshowedShip","setPreshowedShip","preshowedCell","setPreshowedCell","isIncorrectDeploy","setIsIncorrectDeploy","aiMoves","setAiMoves","playerMoves","setPlayerMoves","deadsCount","setDeadsCount","init","aiDeploy","shipPreshow","deployShip","length","makeAiMove","fieldCells","i","Array","j","forEach","shipLength","rndShipDeploy","setTimeout","getRndCoords","isRotate","getRandomInt","min","max","Math","ceil","floor","random","shipIndexCheck","iCoord","jCoord","shipIndex","shipCells","cellPreshow","coords","inc","dec","shipExpansion","isEvenLength","curPreshowedShipCells","isIncorrect","expansion","isRemoveTail","outFieldPreshowCheck","push","unoccupiedCellsCheck","hp","ship","occupiedCellsCombinations","occupiedCells","flat","occupiedCoords","find","preshowCheck","hit","shipId","prewDeadsCount","moveCheck","moves","rndCoords","makePlayerMove","onMouseLeave","row","cell","isPlayerCell","preshow","bind","isDead","isAiMove","isPlayerMove","makeMove","isPreshowCell","isIncorrectPreshow","Cell","selectShip","isSelectedShip","isShip","isHit","setIsHit","isMiss","setIsMiss","isHandleMove","showMove","click","onMouseOver","style","transition","ShipsSelectArea","sendShip","shipsInit","initShips","column","shipCell","filter","x","pageX","y","pageY","SelectedShip","setX","setY","width","setWidth","height","setHeight","columns","setColumns","rows","setRows","setIsRotate","renderShip","setRenderShip","createShip","listener","moveAt","rotateShip","document","addEventListener","removeEventListener","preventDefault","prevIsRotate","renderedShip","left","top","gridTemplateColumns","gridTemplateRows","transform","Home","Player","this","isAi","Game","gameProps","sendPlayersNames","isEndGame","players","curPLayer","setCurPlayer","setSelectedShip","setIsDeployState","changeDeployState","prevDeployState","winGame","fieldId","loserId","loserName","changeCurPlayer","prevCurPlayer","curPlayerId","setRotate","rotate","prevShip","player","zIndex","EndGame","App","playersNames","setPlayersNames","saveStats","playerStat","stat","isWinStat","count","statsSort","stringify","setItem","sort","a","b","path","render","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.09ec3846.chunk.js","sourcesContent":["function Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__title\">Морской бой</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction StartForm({ setGameProps }) {\n  const defaultName = \"Player\";\n  const defaultSide = \"right\";\n\n  const [name, setName] = React.useState(defaultName);\n  const [side, setSide] = React.useState(defaultSide);\n\n  const changeName = (e) => {\n    const newName = e.target.value;\n    setName(newName);\n  };\n\n  const clearDefaulName = (e) => {\n    const name = e.target.value;\n\n    if (name === defaultName) {\n      setName(\"\");\n    }\n  };\n\n  const setDefaulName = (e) => {\n    const name = e.target.value;\n\n    if (name === \"\") {\n      setName(defaultName);\n    }\n  };\n\n  const changeSide = (e) => {\n    const newSide = e.target.value;\n    setSide(newSide);\n  };\n\n  const submit = () => setGameProps({ name, side });\n\n  return (\n    <form className=\"start-form\">\n      <div className=\"start-form__wrapper\">\n        <fieldset className=\"start-form__fieldset\">\n          <legend className=\"start-form__legend\">\n            <h2 className=\"start-form__title\">Имя</h2>\n          </legend>\n          <input\n            className=\"start-form__input-name\"\n            name=\"name\"\n            value={name}\n            onChange={changeName}\n            onClick={clearDefaulName}\n            onBlur={setDefaulName}\n          />\n        </fieldset>\n\n        <fieldset className=\"start-form__fieldset\">\n          <legend className=\"start-form__legend\">\n            <h2 className=\"start-form__title\">Сторона</h2>\n          </legend>\n\n          <label className=\"start-form__radio-wrapper\">\n            <input\n              className=\"start-form__input-side\"\n              type=\"radio\"\n              name=\"side\"\n              value={\"left\"}\n              checked={side === \"left\"}\n              onChange={changeSide}\n            />\n            <div className=\"start-form__input-side-text\">левая😰</div>\n          </label>\n\n          <label className=\"start-form__radio-wrapper\">\n            <input\n              className=\"start-form__input-side\"\n              type=\"radio\"\n              name=\"side\"\n              value={\"right\"}\n              checked={side === \"right\"}\n              onChange={changeSide}\n            />\n            <div className=\"start-form__input-side-text\">правая😎</div>\n          </label>\n        </fieldset>\n      </div>\n      <div className=\"start-form__btn-wrapper\">\n        <Link to=\"/game\">\n          <button className=\"start-form__btn\" onClick={submit}>\n            Играть\n          </button>\n        </Link>\n      </div>\n    </form>\n  );\n}\n\nexport default StartForm;\n","import React from \"react\";\n\nfunction Stats() {\n  const [stats, setStats] = React.useState();\n\n  React.useEffect(\n    () => setStats(JSON.parse(localStorage.getItem(\"stats\"))),\n    []\n  );\n\n  return stats ? (\n    <div className=\"stats\">\n      <h1 className=\"stats__title\">Статистика</h1>\n      <table className=\"stats__table\">\n        <tbody className=\"stats__table-body\">\n          <tr className=\"stats__table-title-row\">\n            <th className=\"stats__table-title\">Имя игрока</th>\n            <th className=\"stats__table-title\">Победы</th>\n            <th className=\"stats__table-title\">Поражения</th>\n          </tr>\n          {stats.map(({ name, winCount, loseCount }) => (\n            <tr className=\"stats__table-row\" key={name}>\n              <th className=\"stats__table-cell\">{name}</th>\n              <th className=\"stats__table-cell\">{winCount}</th>\n              <th className=\"stats__table-cell\">{loseCount}</th>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : null;\n}\n\nexport default Stats;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction EndGameWindow({ winnerName, removePlayersNames }) {\n  return (\n    <div className=\"end-game-window\">\n      <h2 className=\"end-game-window__title\">\n        Игрок {winnerName} одержал победу!\n      </h2>\n      <div className=\"end-game-window__btn-wrapper\">\n        <Link to=\"/\">\n          <button\n            className=\"end-game-window__btn\"\n            onClick={() => removePlayersNames()}\n          >\n            Выход\n          </button>\n        </Link>\n        <Link to=\"/game\">\n          <button\n            className=\"end-game-window__btn\"\n            onClick={() => removePlayersNames()}\n          >\n            Играть ещё\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default EndGameWindow;\n","import React from \"react\";\n\nimport { Cell, SelectedShip } from \"../\";\n\nconst Field = ({\n  id,\n  isPlayerField,\n  selectedShip,\n  sendRotate,\n  removeSelectedShip,\n  endDeployState,\n  shipsLengths,\n  isDeployState,\n  isCurMove,\n  changeMove,\n  endGame,\n}) => {\n  const [cells, setCells] = React.useState();\n  const [ships, setShips] = React.useState([]);\n  const [curSelectedShip, setCurSelectedShip] = React.useState();\n  const [preshowedShip, setPreshowedShip] = React.useState();\n  const [preshowedCell, setPreshowedCell] = React.useState();\n  const [isIncorrectDeploy, setIsIncorrectDeploy] = React.useState();\n  const [aiMoves, setAiMoves] = React.useState([]);\n  const [playerMoves, setPlayerMoves] = React.useState([]);\n  const [deadsCount, setDeadsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    init();\n    !isPlayerField && aiDeploy();\n  }, []);\n\n  React.useEffect(() => !isPlayerField && shipPreshow(), [curSelectedShip]);\n\n  React.useEffect(() => !isPlayerField && deployShip(), [preshowedShip]);\n\n  React.useEffect(\n    () =>\n      isPlayerField && ships.length === shipsLengths.length && endDeployState(),\n    [ships.length]\n  );\n\n  React.useEffect(() => isPlayerField && setCurSelectedShip(selectedShip), [\n    selectedShip,\n  ]);\n\n  React.useEffect(() => isPlayerField && shipPreshow(), [\n    preshowedCell,\n    curSelectedShip,\n  ]);\n\n  React.useEffect(() => isPlayerField && isCurMove && makeAiMove(), [\n    isCurMove,\n  ]);\n\n  React.useEffect(() => changeMove(), [aiMoves, playerMoves]);\n\n  React.useEffect(\n    () => !isDeployState && deadsCount === ships.length && endGame(id),\n    [deadsCount]\n  );\n\n  const init = () => {\n    const fieldCells = [];\n\n    for (let i = 0; i < 10; i++) {\n      fieldCells[i] = new Array(10);\n\n      for (let j = 0; j < 10; j++) {\n        fieldCells[i][j] = null;\n      }\n    }\n\n    setCells(fieldCells);\n  };\n\n  const aiDeploy = () =>\n    shipsLengths.forEach((shipLength) => rndShipDeploy(shipLength));\n\n  const rndShipDeploy = (length) => {\n    setTimeout(() => {\n      setPreshowedCell(getRndCoords());\n      setCurSelectedShip({\n        length: length,\n        isRotate: getRandomInt(0, 1) === 1,\n      });\n    });\n  };\n\n  const getRndCoords = () => [getRandomInt(0, 9), getRandomInt(0, 9)];\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const deployShip = () => {\n    if (isDeployState) {\n      if (!isPlayerField && preshowedShip) {\n        if (!isIncorrectDeploy) {\n          setShips([...ships, preshowedShip]);\n        } else {\n          rndShipDeploy(preshowedShip.cells.length);\n        }\n      }\n\n      if (isPlayerField && !isIncorrectDeploy) {\n        if (curSelectedShip) {\n          setShips([...ships, preshowedShip]);\n          removeSelectedShip();\n        }\n      }\n    }\n  };\n\n  const shipIndexCheck = (iCoord, jCoord) => {\n    let shipIndex = null;\n\n    if (ships) {\n      for (let i = 0; i < ships.length; i++) {\n        const shipCells = ships[i].cells;\n\n        if (shipCells) {\n          for (let j = 0; j < shipCells.length; j++) {\n            if (shipCells[j][0] === iCoord && shipCells[j][1] === jCoord) {\n              shipIndex = i;\n              return shipIndex;\n            }\n          }\n        }\n      }\n    }\n    return shipIndex;\n  };\n\n  const cellPreshow = (coords) => isPlayerField && setPreshowedCell(coords);\n\n  const shipPreshow = () => {\n    if (curSelectedShip && preshowedCell) {\n      const length = curSelectedShip.length;\n      const isRotate = curSelectedShip.isRotate;\n      const shipExpansion = Math.floor(length / 2);\n      const isEvenLength = length % 2 === 0;\n      const i = preshowedCell[0];\n      const j = preshowedCell[1];\n      const curPreshowedShipCells = [];\n      let inc, dec;\n\n      if (!isRotate) {\n        inc = i;\n        dec = i;\n      } else if (isRotate) {\n        inc = j;\n        dec = j;\n      }\n\n      let isIncorrect = false;\n\n      let expansion = 0;\n      while (expansion < shipExpansion) {\n        expansion++;\n        inc++;\n        dec--;\n\n        const isRemoveTail = isEvenLength && expansion === shipExpansion;\n\n        if (!isIncorrect)\n          isIncorrect = !outFieldPreshowCheck(inc, dec, isRemoveTail, isRotate);\n\n        if (!isRotate) {\n          curPreshowedShipCells.push([dec, j]);\n\n          if (isRemoveTail) break;\n\n          curPreshowedShipCells.push([inc, j]);\n        } else {\n          curPreshowedShipCells.push([i, inc]);\n\n          if (isRemoveTail) break;\n\n          curPreshowedShipCells.push([i, dec]);\n        }\n      }\n\n      curPreshowedShipCells.push(preshowedCell);\n\n      if (!isIncorrect)\n        isIncorrect = !unoccupiedCellsCheck(curPreshowedShipCells);\n\n      setIsIncorrectDeploy(isIncorrect);\n      setPreshowedShip({ cells: curPreshowedShipCells, hp: length });\n    }\n  };\n\n  const unoccupiedCellsCheck = (ship) => {\n    if (ships && ship) {\n      const occupiedCellsCombinations = [];\n      ships.forEach((ship) => occupiedCellsCombinations.push(ship.cells));\n      const occupiedCells = occupiedCellsCombinations.flat();\n\n      for (let i = 0; i < occupiedCells.length; i++) {\n        const occupiedCoords = occupiedCells[i];\n\n        if (occupiedCoords) {\n          const cellMatch = ship.find(\n            (coords) =>\n              coords[0] === occupiedCoords[0] && coords[1] === occupiedCoords[1]\n          );\n\n          if (cellMatch) return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  const outFieldPreshowCheck = (inc, dec, isRemoveTail, isRotate) => {\n    if (isRemoveTail) {\n      if (!isRotate) {\n        inc--;\n      } else {\n        dec++;\n      }\n    }\n    return inc >= 0 && inc < 10 && dec >= 0 && dec < 10;\n  };\n\n  const preshowDestroy = () => {\n    if (isPlayerField) {\n      setPreshowedShip(null);\n      setPreshowedCell(null);\n    }\n  };\n\n  const preshowCheck = (i, j) =>\n    preshowedShip &&\n    preshowedShip.cells.find((coords) => i === coords[0] && j === coords[1]);\n\n  const shipDeadCheck = (shipId) => ships[shipId] && ships[shipId].hp === 0;\n\n  const hit = (shipId) =>\n    ships[shipId] &&\n    setShips(\n      ships.map((ship, i) => {\n        if (i === shipId) {\n          const hp = --ship.hp;\n\n          if (hp === 0) setDeadsCount((prewDeadsCount) => ++prewDeadsCount);\n          return { cells: ship.cells, hp };\n        }\n        return ship;\n      })\n    );\n\n  const moveCheck = (moves, i, j) =>\n    moves.find((coords) => i === coords[0] && j === coords[1]);\n\n  const makeAiMove = () => {\n    let rndCoords;\n\n    while (true) {\n      rndCoords = getRndCoords();\n\n      if (!moveCheck(aiMoves, rndCoords[0], rndCoords[1])) break;\n    }\n\n    setAiMoves([...aiMoves, rndCoords]);\n  };\n\n  const makePlayerMove = (coords) => setPlayerMoves([...playerMoves, coords]);\n\n  return (\n    <>\n      <div\n        className=\"field\"\n        onMouseLeave={() => preshowDestroy()}\n        onClick={() => deployShip()}\n      >\n        {cells &&\n          cells.map((row, i) =>\n            row.map((cell, j) => {\n              const id = shipIndexCheck(i, j);\n              return (\n                <Cell\n                  isPlayerCell={isPlayerField}\n                  preshow={cellPreshow.bind(this)}\n                  coords={[i, j]}\n                  shipId={id}\n                  isDeployState={isDeployState}\n                  isDead={!isDeployState && shipDeadCheck(id)}\n                  hit={hit.bind(this)}\n                  isAiMove={moveCheck(aiMoves, i, j)}\n                  isPlayerMove={moveCheck(playerMoves, i, j)}\n                  isCurMove={isCurMove}\n                  makeMove={makePlayerMove.bind(this)}\n                  key={i + j}\n                />\n              );\n            })\n          )}\n      </div>\n\n      {isPlayerField && isDeployState && (\n        <div className=\"field field--fake\">\n          {cells &&\n            cells.map((row, i) =>\n              row.map((cell, j) => (\n                <Cell\n                  isPreshowCell={curSelectedShip && preshowCheck(i, j)}\n                  shipId={shipIndexCheck(i, j)}\n                  isIncorrectPreshow={curSelectedShip && isIncorrectDeploy}\n                  key={i + j}\n                  isPlayerCell={true}\n                />\n              ))\n            )}\n        </div>\n      )}\n\n      {curSelectedShip && isPlayerField && (\n        <SelectedShip\n          ship={curSelectedShip}\n          sendRotate={sendRotate}\n          isDeployState={isDeployState}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Field;\n","import React from \"react\";\n\nconst Cell = ({\n  shipId,\n  selectShip,\n  isPlayerCell,\n  preshow,\n  coords,\n  isPreshowCell,\n  isIncorrectPreshow,\n  isDeployState,\n  isDead,\n  hit,\n  isAiMove,\n  isPlayerMove,\n  isCurMove,\n  makeMove,\n  isSelectedShip,\n}) => {\n  const isShip = shipId || shipId === 0;\n  const [isHit, setIsHit] = React.useState(false);\n  const [isMiss, setIsMiss] = React.useState(false);\n  const isHandleMove =\n    isCurMove && !isPlayerCell && !isDeployState && !isHit && !isMiss;\n\n  React.useEffect(() => {\n    if (isAiMove || isPlayerMove) showMove();\n  }, [isAiMove, isPlayerMove]);\n\n  const click = (e) => {\n    if (isHandleMove) {\n      makeMove(coords);\n    } else if (selectShip) {\n      selectShip(shipId, e);\n    }\n  };\n\n  const showMove = () => {\n    if (isShip) {\n      setIsHit(true);\n      hit(shipId);\n    } else {\n      setIsMiss(true);\n    }\n  };\n\n  return (\n    <div\n      onClick={(e) => click(e)}\n      onMouseOver={() => preshow && preshow(coords)}\n      style={{\n        transition:\n          isPlayerCell && !isDeployState\n            ? \"none\"\n            : \"background-color 1000ms ease\",\n      }}\n      className={\n        \"cell\" +\n        `${isShip && isPlayerCell ? \" cell--allied\" : \"\"}` +\n        `${\n          isPlayerCell && isDeployState && !isSelectedShip\n            ? \" cell--transparent\"\n            : \"\"\n        }` +\n        `${isPreshowCell && !isShip ? \" cell--preshow\" : \"\"}` +\n        `${\n          isPreshowCell && isIncorrectPreshow && !isShip\n            ? \" cell--incorrect\"\n            : \"\"\n        }` +\n        `${isHit && !isDead ? \" cell--hit\" : \"\"}` +\n        `${isDead && isShip ? \" cell--dead\" : \"\"}`\n      }\n    >{`${isMiss ? \"⚫\" : \"\"}`}</div>\n  );\n};\n\nexport default Cell;\n","import React from \"react\";\n\nimport { Cell } from \"../\";\n\nconst ShipsSelectArea = ({ shipsLengths, sendShip }) => {\n  const [cells, setCells] = React.useState();\n  const [ships, setShips] = React.useState([]);\n\n  React.useEffect(() => {\n    init();\n    shipsInit();\n  }, []);\n\n  const init = () => {\n    const fieldCells = [];\n\n    for (let i = 0; i < 6; i++) {\n      fieldCells[i] = new Array(21);\n\n      for (let j = 0; j < 21; j++) {\n        fieldCells[i][j] = null;\n      }\n    }\n\n    setCells(fieldCells);\n  };\n\n  const shipsInit = () => {\n    const initShips = [];\n    let column = -1;\n\n    shipsLengths.forEach((shipLength) => {\n      const ship = [];\n      column = column + 2;\n\n      for (let shipCell = 0; shipCell < shipLength; shipCell++) {\n        const row = shipCell + 1;\n\n        ship.push([row, column]);\n      }\n\n      initShips.push(ship);\n    });\n\n    setShips(initShips);\n  };\n\n  const shipIndexCheck = (iCoord, jCoord) => {\n    let shipIndex = null;\n\n    for (let i = 0; i < ships.length; i++) {\n      const ship = ships[i];\n\n      for (let j = 0; j < ship.length; j++) {\n        if (ship[j][0] === iCoord && ship[j][1] === jCoord) {\n          shipIndex = i;\n          return shipIndex;\n        }\n      }\n    }\n    return shipIndex;\n  };\n\n  const deleteShip = (shipId) =>\n    setShips(ships.filter((ship, id) => id !== shipId));\n\n  const selectShip = (id, e) => {\n    if (id || id === 0) {\n      const length = ships[id].length;\n      deleteShip(id);\n\n      sendShip({\n        id,\n        length,\n        x: e.pageX,\n        y: e.pageY,\n      });\n    }\n  };\n\n  return (\n    <div className=\"ships-select-area__wrapper\">\n      <h2 className=\"ships-select-area__title\">Выберите корабли</h2>\n      <div className=\"ships-select-area\">\n        {cells &&\n          cells.map((row, i) =>\n            row.map((cell, j) => (\n              <Cell\n                shipId={shipIndexCheck(i, j)}\n                selectShip={selectShip.bind(this)}\n                isPlayerCell={true}\n                key={i + j}\n              />\n            ))\n          )}\n      </div>\n      <ul className=\"ships-select-area__tutorial\">\n        <li className=\"ships-select-area__tutorial-item\">\n          ЛКМ - выбор/размещение корабля\n        </li>\n        <li className=\"ships-select-area__tutorial-item\">\n          ПКМ - поворот выбранного корабля\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default ShipsSelectArea;\n","import React from \"react\";\n\nimport { Cell } from \"../\";\n\nconst SelectedShip = ({ ship, sendRotate, isDeployState }) => {\n  const [x, setX] = React.useState();\n  const [y, setY] = React.useState();\n  const [width, setWidth] = React.useState();\n  const [height, setHeight] = React.useState();\n  const [columns, setColumns] = React.useState();\n  const [rows, setRows] = React.useState();\n  const [isRotate, setIsRotate] = React.useState();\n  const [renderShip, setRenderShip] = React.useState();\n\n  React.useEffect(() => createShip(), []);\n\n  React.useEffect(() => {\n    if (renderShip) {\n      const listener = (e) => {\n        if (e.type === \"mousemove\") {\n          moveAt(e.pageX, e.pageY);\n        } else if (e.type === \"contextmenu\") {\n          rotateShip(e);\n        }\n      };\n\n      const show = () => {\n        document.addEventListener(\"mousemove\", listener);\n        document.addEventListener(\"contextmenu\", listener);\n        moveAt(ship.x, ship.y);\n      };\n\n      const removeListeners = () => {\n        document.removeEventListener(\"mousemove\", listener);\n        document.removeEventListener(\"contextmenu\", listener);\n      };\n\n      show();\n\n      return removeListeners;\n    }\n  }, [renderShip]);\n\n  React.useEffect(() => sendRotate(isRotate), [isRotate]);\n\n  const rotateShip = (e) => {\n    e.preventDefault();\n\n    setIsRotate((prevIsRotate) => !prevIsRotate);\n  };\n\n  const moveAt = (x, y) => {\n    setX(x - width / 2);\n    setY(y - height / 2);\n  };\n\n  const createShip = () => {\n    const cellSize = 50;\n    const length = ship.length;\n    const width = cellSize;\n    const height = cellSize * length;\n\n    setX(ship.x);\n    setY(ship.y);\n    setWidth(width);\n    setHeight(height);\n    setColumns(1);\n    setRows(length);\n    setIsRotate(false);\n\n    const renderedShip = new Array(length);\n\n    for (let i = 0; i < length; i++) {\n      renderedShip[i] = (\n        <Cell\n          shipId={true}\n          isDeployState={isDeployState}\n          isPlayerCell={true}\n          isSelectedShip={true}\n          key={i}\n        />\n      );\n    }\n\n    setRenderShip(renderedShip);\n  };\n\n  return (\n    <div\n      style={{\n        left: `${x}px`,\n        top: `${y}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\n        gridTemplateRows: `repeat(${rows}, calc(100% / ${rows}))`,\n        transform: `rotate(${!isRotate ? 0 : 90}deg)`,\n      }}\n      className=\"selected-ship\"\n    >\n      {renderShip}\n    </div>\n  );\n};\n\nexport default SelectedShip;\n","import { StartForm, Stats } from \"../components\";\n\nfunction Home({ setGameProps }) {\n  return (\n    <div className=\"content\">\n      <StartForm setGameProps={setGameProps} />\n      <Stats />\n    </div>\n  );\n}\n\nexport default Home;\n","class Player {\n    constructor(name) {\n        if (name) {\n            this.name = name;\n            this.isAi = false;\n        } else {\n            this.name = 'AI';\n            this.isAi = true;\n        }\n    }\n}\n\nexport default Player;","import React from \"react\";\nimport { Redirect } from \"react-router\";\n\nimport { Field, ShipsSelectArea } from \"../../components\";\nimport Player from \"./Player\";\n\nconst Game = ({ gameProps, sendPlayersNames, isEndGame }) => {\n  const shipsLengths = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\n  const [players] = React.useState([]);\n  const [curPLayer, setCurPlayer] = React.useState();\n  const [selectedShip, setSelectedShip] = React.useState();\n  const [isDeployState, setIsDeployState] = React.useState(true);\n\n  React.useEffect(() => {\n    if (gameProps.side === \"left\") {\n      players.push(new Player(gameProps.name));\n      players.push(new Player());\n    } else if (gameProps.side === \"right\") {\n      players.push(new Player());\n      players.push(new Player(gameProps.name));\n    }\n    setCurPlayer(players[0]);\n  }, []);\n\n  const changeDeployState = () =>\n    setIsDeployState((prevDeployState) => !prevDeployState);\n\n  const winGame = (fieldId) => {\n    const loserId = fieldId;\n    const winnerId = loserId === 0 ? 1 : 0;\n\n    sendPlayersNames({\n      winnerName: players[winnerId].name,\n      loserName: players[loserId].name,\n    });\n  };\n\n  const changeCurPlayer = () =>\n    setCurPlayer((prevCurPlayer) => {\n      const curPlayerId = prevCurPlayer === players[0] ? 1 : 0;\n      return players[curPlayerId];\n    });\n\n  const selectShip = (ship) => setSelectedShip(ship);\n\n  const setRotate = (rotate) =>\n    setSelectedShip((prevShip) => {\n      const ship = {\n        ...prevShip,\n        isRotate: rotate,\n      };\n      return ship;\n    });\n\n  return !isEndGame ? (\n    <div className=\"content\">\n      <div className=\"fields-wrapper\">\n        {players.map((player, id) => (\n          <div\n            className=\"field-wrapper\"\n            style={{ zIndex: id === 1 && player.isAi ? 0 : 1 }}\n            key={player.name}\n          >\n            <h2 className=\"player-name\">{player.name}</h2>\n            <Field\n              id={id}\n              shipsLengths={shipsLengths}\n              isPlayerField={!player.isAi}\n              selectedShip={!player.isAi && selectedShip}\n              sendRotate={setRotate.bind(this)}\n              removeSelectedShip={selectShip.bind(this)}\n              endDeployState={changeDeployState.bind(this)}\n              isDeployState={isDeployState}\n              isCurMove={!isDeployState && curPLayer !== player}\n              changeMove={changeCurPlayer.bind(this)}\n              endGame={winGame.bind(this)}\n            />\n          </div>\n        ))}\n      </div>\n      {!isDeployState && (\n        <h3 className=\"cur-move\">Ход игрока {curPLayer.name}...</h3>\n      )}\n      {isDeployState && (\n        <ShipsSelectArea\n          shipsLengths={shipsLengths}\n          sendShip={selectShip.bind(this)}\n        />\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/endgame\" />\n  );\n};\n\nexport default Game;\n","import { EndGameWindow } from \"../components\";\nimport { Stats } from \"../components\";\n\nfunction EndGame({ winnerName, removePlayersNames }) {\n  return (\n    <div className=\"content\">\n      <EndGameWindow\n        winnerName={winnerName}\n        removePlayersNames={removePlayersNames}\n      />\n      <Stats />\n    </div>\n  );\n}\n\nexport default EndGame;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Header } from './components';\nimport { Home, Game, EndGame } from './pages';\n\nfunction App() {\n  const [gameProps, setGameProps] = React.useState();\n  const [playersNames, setPlayersNames] = React.useState();\n\n  React.useEffect(() => playersNames && saveStats(), [playersNames]);\n\n  const saveStats = () => {\n    let stats = JSON.parse(localStorage.getItem('stats'));\n\n    if (!stats) stats = [];\n\n    const winnerStat = stats.find(playerStat => playerStat.name === playersNames.winnerName);\n    const loserStat = stats.find(playerStat => playerStat.name === playersNames.loserName);\n\n    [winnerStat, loserStat].forEach((stat, i) => {\n      const isWinStat = i === 0;\n      const name = isWinStat ? playersNames.winnerName : playersNames.loserName;\n      const count = isWinStat ? 'winCount' : 'loseCount';\n\n      if (!stat) {\n        stat = { name, winCount: 0, loseCount: 0 };\n        stats.push(stat);\n      }\n\n      ++stat[count];\n    })\n\n    statsSort(stats);\n    stats = JSON.stringify(stats);\n    localStorage.setItem('stats', stats);\n  }\n\n  const statsSort = (stats) => stats.sort((a, b) => b.winCount - a.winCount);\n\n  const removePlayersNames = () => setPlayersNames(null);\n\n  return (\n    <>\n      <Header />\n      <Route path={process.env.PUBLIC_URL + \"/\"} render={() => <Home setGameProps={setGameProps} />} exact />\n      <Route path=\"/game\" render={() => <Game\n        gameProps={gameProps}\n        sendPlayersNames={setPlayersNames}\n        isEndGame={playersNames ? true : false} />}\n        exact />\n      <Route path=\"/endgame\" render={() => <EndGame\n        winnerName={playersNames.winnerName}\n        removePlayersNames={removePlayersNames.bind(this)}\n      />} exact />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './styles.scss';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}